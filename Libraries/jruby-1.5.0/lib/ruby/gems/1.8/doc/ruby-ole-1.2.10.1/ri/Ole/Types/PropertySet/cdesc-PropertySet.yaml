--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
  - !ruby/struct:SM::Flow::P 
    body: The PropertySet class currently supports readonly access to the properties serialized in &quot;property set&quot; streams, such as the file &quot;\005SummaryInformation&quot;, in OLE files.
  - !ruby/struct:SM::Flow::P 
    body: Think it has its roots in MFC property set serialization.
  - !ruby/struct:SM::Flow::P 
    body: See http://poi.apache.org/hpsf/internals.html for details
constants: 
  - !ruby/object:RI::Constant 
    comment: 
    name: HEADER_SIZE
    value: "28"
  - !ruby/object:RI::Constant 
    comment: 
    name: HEADER_PACK
    value: "\"vvVa#{Clsid::SIZE}V\""
  - !ruby/object:RI::Constant 
    comment: 
    name: OS_MAP
    value: "{         0 => :win16,         1 => :mac,         2 => :win32,         0x20001 => :ooffice, # open office on linux...       }"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: define a smattering of the property set guids.
    name: DATA
    value: YAML.load_file(File.dirname(__FILE__) + '/../../../data/propids.yaml').         inject({}) { |hash, (key, value)| hash.update Clsid.parse(key) => value }
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: create an inverted map of names to guid/key pairs
    name: PROPERTY_MAP
    value: DATA.inject({}) do |h1, (guid, data)|         data[1].inject(h1) { |h2, (id, name)| h2.update name => [guid, id] }
full_name: Ole::Types::PropertySet
includes: []

instance_methods: []

name: PropertySet
superclass: Object
