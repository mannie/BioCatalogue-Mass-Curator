--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: load document from file.
  - !ruby/struct:SM::Flow::P 
    body: "TODO: implement various allocationtable checks, maybe as a AllocationTable#fsck function :)"
  - !ruby/object:SM::Flow::LIST 
    contents: 
      - !ruby/struct:SM::Flow::LI 
        label: "1."
        body: reterminate any chain not ending in EOC. compare file size with actually allocated blocks per file.
      - !ruby/struct:SM::Flow::LI 
        label: "2."
        body: pass through all chain heads looking for collisions, and making sure nothing points to them (ie they are really heads). in both sbat and mbat
      - !ruby/struct:SM::Flow::LI 
        label: "3."
        body: we know the locations of the bbat data, and mbat data. ensure that there are placeholder blocks in the bat for them.
      - !ruby/struct:SM::Flow::LI 
        label: "4."
        body: "maybe a check of excess data. if there is data outside the bbat.truncate.length + 1 * block_size, (eg what is used for truncate in #flush), then maybe add some sort of message about that. it will be automatically thrown away at close time."
    type: :NUMBER
full_name: Ole::Storage#load
is_singleton: false
name: load
params: ()
visibility: public
