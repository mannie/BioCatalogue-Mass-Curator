--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Include this module into a class that defines #each_child. It should maybe use #each instead, but its easier to be more specific, and use an alias."
  - !ruby/struct:SM::Flow::P 
    body: "I don't want to force the class to cache children (eg where children are loaded on request in pst), because that forces the whole tree to be loaded. So, the methods should only call #each_child once, and breadth first iteration holds its own copy of the children around."
  - !ruby/struct:SM::Flow::P 
    body: "Main methods are #recursive, and #to_tree"
constants: []

full_name: RecursivelyEnumerable
includes: []

instance_methods: []

name: RecursivelyEnumerable
superclass: 
